/*********************************************
 * OPL 12.9.0.0 Model
 * Author: banian
 * Creation Date: 2023年3月12日 at 下午4:06:19
 *********************************************/
int n = 5;
int m = 2;
int F = 2;
int u1=400;
int u2=300;
int h = 100000;
range jobs = 0..n;
range machines = 1..m;
range factories = 1..F;
//float P[1..n][1..m] = [[3,2,4],[4,2,3],[2,4,2],[4,3,4],[1,3,4],[3,4,1],[3,4,2],[4,1,3]];
//float ST[1..n][1..n][machines]=[[[0,0,0],[3,1,6],[1,6,1],[6,1,1],[5,1,2],[2,9,9],[9,9,1],[1,8,5]],
//                               [[2,3,3],[0,0,0],[4,2,1],[4,1,8],[7,3,5],[6,9,2],[9,4,1],[3,8,5]],
//                               [[3,3,2],[9,3,6],[0,0,0],[2,1,1],[5,2,7],[5,5,9],[2,7,1],[7,8,5]],
//                               [[4,5,3],[1,4,6],[5,2,2],[0,0,0],[3,1,6],[2,4,1],[9,9,1],[4,8,5]],
//                               [[5,7,2],[2,1,6],[6,4,3],[6,1,1],[0,0,0],[4,9,1],[6,9,1],[3,5,5]],
//                               [[5,6,5],[4,2,6],[7,7,3],[8,6,5],[2,3,5],[0,0,0],[7,9,1],[1,3,5]],
//                               [[6,8,4],[3,1,6],[7,6,5],[8,3,6],[1,4,1],[2,4,5],[0,0,0],[1,4,5]],
//                               [[2,1,8],[5,5,6],[8,2,1],[7,2,8],[5,1,2],[3,6,6],[7,9,1],[0,0,0]]];
//float STS[1..n][machines]= [[2,1,8],[3,1,6],[1,6,1],[6,1,1],[5,1,2],[2,9,9],[9,9,1],[1,8,5]];  
float P[1..n][1..m] = [[4,4],[6,4],[5,5],[9,3],[3,1]];
float ST[1..n][1..n][machines]= [[[0,0],[3,5],[6,4],[8,4],[9,5]],
                                 [[2,9],[0,0],[4,9],[5,4],[9,4]],
                                 [[2,1],[5,9],[0,0],[2,9],[3,4]],
                                 [[1,1],[2,2],[1,9],[0,0],[9,9]],
                                 [[1,9],[5,1],[2,4],[5,2],[0,0]]];                
float STS[1..n][machines]= [[6,1],[3,3],[2,6],[3,1],[6,9]]; 
dvar boolean X[jobs][jobs]; 

dvar float D[1..n][0..m];

dvar float Cmax;
minimize Cmax;

subject to{
	// Constraint 2,3
	forall(j2 in 1..n) sum(j1 in 0..n: j1!=j2) X[j1][j2] == 1; 
	forall(j1 in 1..n) sum(j2 in 0..n: j1!=j2) X[j1][j2] == 1; 
	// “头”数目=“尾”数目=工厂数（F个子序列），当工厂数目F=1时，代表单工厂，只有一个序列。
	// Constraint 4,5
	F == sum(j in 1..n) X[j][0]; 	
	F == sum(j in 1..n) X[0][j]; 
	// 无子环约束 Constraint8
	forall(j1 in 2..n, j2 in 2..n :j1!=j2) u2-u1+(n-1)*X[j1][j2] <= n-2;
	// Constraint 9
	forall(j in 1..n, i in 1..m) D[j][i] >= D[j][i-1] + P[j][i];
	// Constraint 10
	forall(j1 in 1..n, j2 in 1..n :j1!=j2,i in 1..m-1) D[j2][i] >= D[j1][i+1] + ST[j1][j2][i+1] + (X[j1][j2] -1) * h;
	// Constraint 11
	forall(j1 in 1..n, j2 in 1..n :j1!=j2, i in 1..m)  D[j2][i] >= D[j1][i] + P[j2][i] + ST[j1][j2][i] + (X[j1][j2] -1) * h;
	// Constraint 12 
	forall(j in 1..n, i in 1..m) D[j][i] >= STS[j][i] + P[j][i] + (X[0][j] -1) * h;
	// Constraint 13
	forall(j in 1..n, i in 1..m-1) D[j][i] >= STS[j][i+1] + (X[0][j] -1) * h;
	// Constraint 19
	forall(j in 1..n) Cmax >= D[j][m]  ;
}